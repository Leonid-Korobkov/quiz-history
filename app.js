'use strict'

// –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
const quizStartScreen = document.querySelector('.quiz__screen-start')
const quizButtonStart = document.querySelector('.quiz__button_start')

// let currentHeightQuiz = quizStartScreen.scrollHeight

// –ö–≤–∏–∑ –∏ –≤–æ–ø—Ä–æ—Å—ã
const quizQuestionContainer = document.querySelector('.quiz__question-container')
const quizQuestionTitle = document.querySelector('.quiz__title_question')
const quizQuestionImageContainer = document.querySelector('.quiz__image')
const quizQuestionListAnswers = document.querySelector('.quiz__list')
const quizButtonQuestion = document.querySelector('.quiz__button_question')
const quizQuestionWrapper = document.querySelector('.quiz__question-wrapper')
const quizQuestionButtonWrapper = document.querySelector('.quiz__button-wrapper_question')

// –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
const quizProgressFill = document.querySelector('.quiz__progress-fill')
const quizProgressCurrentNumber = document.querySelector('.quiz__progress-question_current')
const quizProgressAmountNumber = document.querySelector('.quiz__progress-question_amount')

// –≠–∫—Ä–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
const quizResultScreen = document.querySelector('.quiz__result-screen')
const quizButtonRestart = document.querySelector('.quiz__button_restart')
const resultScreenTitle = document.querySelector('.result-screen__title')
const resultScreenDescr = document.querySelector('.result-screen__descr')
const resultScreenTable = document.querySelector('.quiz__table-result')
const resultScreenListAnswers = document.querySelector('.quiz__result-question-list')

// –ú–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
const questions = [
  {
    question: '–ö—Ç–æ —Å—Ç–∞–ª –ø–µ—Ä–≤—ã–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –†–æ—Å—Å–∏–∏ –ø–æ—Å–ª–µ —Ä–∞—Å–ø–∞–¥–∞ –°–°–°–†?',
    answers: ['–í–ª–∞–¥–∏–º–∏—Ä –ü—É—Ç–∏–Ω', '–ú–∏—Ö–∞–∏–ª –ì–æ—Ä–±–∞—á–µ–≤', '–ë–æ—Ä–∏—Å –ï–ª—å—Ü–∏–Ω', '–î–º–∏—Ç—Ä–∏–π –ú–µ–¥–≤–µ–¥–µ–≤'],
    correct: '–ë–æ—Ä–∏—Å –ï–ª—å—Ü–∏–Ω',
    descrAnswer: '–ö–∞–∫–æ–µ-—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ 1',
    numberImg: 1,
    isRightUserAnswer: false,
    userAnswer: null,
    indexCorrectAnswer: null,
    indexUserAnswer: null
  },
  {
    question: '–ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ 1991 –≥–æ–¥—É, –ø—Ä–∏–≤–µ–¥—à–µ–µ –∫ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–º—É —Ä–∞—Å–ø–∞–¥—É –°–°–°–†?',
    answers: ['–ü–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∞', '–ö—Ä–∞—Ö —ç–∫–æ–Ω–æ–º–∏–∫–∏', '–í–æ–π–Ω–∞ –≤ –ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω–µ', '–ü–æ–ø—ã—Ç–∫–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞'],
    correct: '–ü–æ–ø—ã—Ç–∫–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞',
    descrAnswer: '–ö–∞–∫–æ–µ-—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ 2',
    numberImg: 2,
    isRightUserAnswer: false,
    userAnswer: null,
    indexCorrectAnswer: null,
    indexUserAnswer: null
  },
  {
    question: '–ö–∞–∫–∏–µ —Ä–µ—Ñ–æ—Ä–º—ã –±—ã–ª–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω—ã –≤ –†–æ—Å—Å–∏–∏ –≤ 1990-–µ –≥–æ–¥—ã?',
    answers: ['–†–µ—Ñ–æ—Ä–º—ã –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏', '–†–µ—Ñ–æ—Ä–º—ã –≤ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏', '–†–µ—Ñ–æ—Ä–º—ã –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ', '–†–µ—Ñ–æ—Ä–º—ã –≤ –Ω–∞—É–∫–µ'],
    correct: '–†–µ—Ñ–æ—Ä–º—ã –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ',
    descrAnswer: '–ö–∞–∫–æ–µ-—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ 3',
    numberImg: 3,
    isRightUserAnswer: false,
    userAnswer: null,
    indexCorrectAnswer: null,
    indexUserAnswer: null
  },
]

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
let questionIndex = 0
let userScore = 0
let countQuestions = questions.length

// C–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ (–Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã, —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –ø–æ–≤—Ç–æ—Ä –∏–≥—Ä—ã)
quizButtonStart.addEventListener('click', function(e) {
  e.preventDefault()
  quizStartScreen.classList.remove('visible')
  quizQuestionContainer.classList.add('visible')
  randomQuestions()
  renderQuestion()
})
quizButtonQuestion.addEventListener('click', function(e) {
  e.preventDefault()
  if (checkAnswer()) {
    renderQuestion()
  }
})
quizButtonRestart.addEventListener('click', function(e) {
  e.preventDefault()
  resetQuizResults()
  randomQuestions()
  renderQuestion()
  quizResultScreen.classList.remove('visible')
  quizQuestionContainer.classList.add('visible')
  quizStartScreen.classList.remove('visible')
})

function resetQuizResults() {
  questionIndex = 0
  userScore = 0
  resultScreenTitle.innerHTML = ''
  resultScreenDescr.innerHTML = ''
  resultScreenTable.innerHTML = ''
  resultScreenListAnswers.innerHTML = ''

  for (let question of questions) {
    question['isRightUserAnswer'] = false
    question['userAnswer'] = null
    question['indexCorrectAnswer'] = null
    question['indexUserAnswer'] = null
  }
}

function checkAnswer() {
  const selectedAnswerUser = quizQuestionListAnswers.querySelector('.quiz__item-answer:checked')
  if (!selectedAnswerUser) {
    quizQuestionButtonWrapper.classList.add('error')
    setTimeout(() => {
      quizQuestionButtonWrapper.classList.remove('error')
    }, 2000)
    return false
  }
  quizQuestionButtonWrapper.classList.remove('error')
  questions[questionIndex]['userAnswer'] = selectedAnswerUser.value
  if (questions[questionIndex]['correct'] === questions[questionIndex]['userAnswer']) {
    questions[questionIndex]['isRightUserAnswer'] = true
    userScore++
  }

  const itemsAnswers = document.querySelectorAll('.quiz__item-answer')
  itemsAnswers.forEach((item, index) => {
    if (item.value === questions[questionIndex]['correct']) {
      questions[questionIndex]['indexCorrectAnswer'] = index
    } else if (item.value === questions[questionIndex]['userAnswer']) {
      questions[questionIndex]['indexUserAnswer'] = index
    }
  })

  questionIndex++

  return true
}

function renderQuestion() {
  // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≤–æ–ø—Ä–æ—Å–µ
  if (questionIndex === questions.length) {
    renderProgressBar(true)
    setTimeout(() => {
      quizQuestionContainer.classList.remove('visible')
      quizResultScreen.classList.add('visible')
      renderResult()
    }, 300)
    return
  }

  // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
  // quizQuestionContainer.style.maxHeight = currentHeightQuiz + 'px'

  let questionTitleText = questions[questionIndex]['question']
  let questionImgHTML = `<img src="img/questions/${questions[questionIndex]['numberImg']}.jpg" alt="${questionTitleText}">`

  let questionListAnswersHTML = ``
  questions[questionIndex]['answers'].forEach((item, i) => {
    questionListAnswersHTML += `
        <li class="quiz__item">
          <input type="radio" name="answer" class="quiz__item-answer" id="quiz__item-answer_${i + 1}" value="${item}">
          <label for="quiz__item-answer_${i + 1}">
            <span>${item}</span>
          </label>
        </li>`
  })

  quizQuestionTitle.textContent = questionTitleText
  quizQuestionImageContainer.innerHTML = questionImgHTML
  quizQuestionListAnswers.innerHTML = questionListAnswersHTML

  if (questionIndex === questions.length - 1) {
    quizButtonQuestion.textContent = '–∑–∞–∫–æ–Ω—á–∏—Ç—å'
  } else {
    quizButtonQuestion.textContent = '–æ—Ç–≤–µ—Ç–∏—Ç—å'
  }

  renderProgressBar()
  // let height = quizQuestionWrapper.scrollHeight
  // quizQuestionWrapper.style.visibility = 'hidden'
  // quizQuestionWrapper.style.display = 'none'

  // quizQuestionWrapper.style.maxHeight = height + 'px'
  // quizQuestionWrapper.style.visibility = 'visible'
  // quizQuestionWrapper.style.display = 'block'
  // currentHeightQuiz = quizQuestionContainer.scrollHeight
  // quizQuestionContainer.style.maxHeight = currentHeightQuiz + 'px';
}

function renderProgressBar(isLastQuestion = false) {
  if (!isLastQuestion) {
    quizProgressAmountNumber.textContent = countQuestions
    quizProgressCurrentNumber.textContent = questionIndex + 1
    quizProgressFill.style.width = `${questionIndex / countQuestions * 100}%`
  } else {
    quizProgressFill.style.width = `${questionIndex / countQuestions * 100}%`
  }
}

function randomQuestions() {
  questions.sort(() => Math.random() - 0.5)
  for (const q of questions) {
    q.answers.sort(() => Math.random() - 0.5)
  }
}
function renderResult() {
  const percentRightAnswers = (userScore / countQuestions * 100).toFixed()

  let raiting = 0
  if (percentRightAnswers > 85) {
    resultScreenDescr.innerHTML = `<span>–ì–µ–Ω–∏–π!</span>–¢—ã –ª–∏–±–æ –ë–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Å –Ω–∞—á–∞–ª–∞ –º–∏—Ä–∞ –Ω–∞–±–ª—é–¥–∞–ª –∑–∞ –≤—Å–µ–π –µ–≥–æ –∏—Å—Ç–æ—Ä–∏–µ–π, –ª–∏–±–æ –≤—Å–µ–∑–Ω–∞—é—â–∏–π –≥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–∏—Å–ø–æ–ª–Ω–∏–ª—Å—è –≤ —Å–≤–æ—ë–º –ø–æ–∑–Ω–∞–Ω–∏–∏. –ú–æ–ª–æ–¥–µ—Ü!`
    resultScreenTitle.innerHTML = `üéâ${userScore} <span>–∏–∑</span> ${countQuestions}üéâ`
    raiting = 5
  } else if (percentRightAnswers > 65) {
    resultScreenDescr.innerHTML = `<span>–û—Ç–ª–∏—á–Ω–æ!</span>–¢—ã –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à –≤ –∑–Ω–∞–Ω–∏—è—Ö –≤—Å–µ–æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏, –Ω–æ –¥–æ –≥–µ–Ω–∏—è –Ω–µ –¥–æ—Ç—è–Ω—É–ª`
    resultScreenTitle.innerHTML = `üéä${userScore} <span>–∏–∑</span> ${countQuestions}üéä`
    raiting = 4
  } else if (percentRightAnswers > 45) {
    resultScreenDescr.innerHTML = `<span>–õ—É—á—à–µ —á–µ–º –Ω–∏—á–µ–≥–æ!</span>–¢—ã –∑–Ω–∞–µ—à—å —á—Ç–æ-—Ç–æ, –Ω–æ –Ω–µ –±–æ–ª–µ–µ`
    resultScreenTitle.innerHTML = `ü•≥${userScore} <span>–∏–∑</span> ${countQuestions}ü•≥`
    raiting = 3
  } else if (percentRightAnswers > 1) {
    resultScreenDescr.innerHTML = `<span>–£–∂–∞—Å–Ω–æ!</span>–¢—ã –¥–∞–ª—ë–∫ –æ—Ç –≤—Å–µ–æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏`
    resultScreenTitle.innerHTML = `üò≠${userScore} <span>–∏–∑</span> ${countQuestions}üò≠`
    raiting = 2
  } else {
    resultScreenDescr.innerHTML = `<span>–ö–∞–∫ —Ç–∞–∫?</span>–ù–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞`
    resultScreenTitle.innerHTML = `ü§¨ü§Ø${userScore} <span>–∏–∑</span> ${countQuestions}ü§Øü§¨`
    raiting = 1
  }

  resultScreenTable.innerHTML = `
    <tr>
      <th>–ö–æ–ª–∏—á–µ—Å—Ç–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</th>
      <th>${userScore} –∏–∑ ${countQuestions}</th>
    </tr>
    <tr>
      <td>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</td>
      <td>${percentRightAnswers}%</td>
    </tr>
    <tr>
      <td>–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è</td>
      <td>2:33 –∏–∑ 10:00</td>
    </tr>
    <tr>
      <td>–û—Ü–µ–Ω–∫–∞</td>
      <td>${raiting}</td>
    </tr>
  `

  resultScreenListAnswers.innerHTML = `<div class="result-question-list__title">–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã</div>`
  questions.forEach((question, index) => {
    let questionListAnswersHTML = ''

    let templateAnswerItem = `
        <li class="quiz__item %cssClass%">
          <div class="quiz__item-answer"></div>
          <label>
            <span>%title%</span>
          </label>
        </li>
      `
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞–º –Ω—É–∂–Ω—ã–µ —Å—Ç–∏–ª–∏
    if (question['isRightUserAnswer']) {
      for (let answer of question['answers']) {
        if (answer !== question['correct']) {
          questionListAnswersHTML += templateAnswerItem.replace('%cssClass%', 'quiz__item_answered').replace('%title%', answer)
        } else {
          questionListAnswersHTML += templateAnswerItem.replace('%cssClass%', 'quiz__item_right').replace('%title%', answer)
        }
      }
    } else {
      for (let answer of question['answers']) {
        if (answer === question['correct']) {
          questionListAnswersHTML += templateAnswerItem.replace('%cssClass%', 'quiz__item_suppose').replace('%title%', answer)
        } else if (answer === question['userAnswer']) {
          questionListAnswersHTML += templateAnswerItem.replace('%cssClass%', 'quiz__item_wrong').replace('%title%', answer)
        } else {
          questionListAnswersHTML += templateAnswerItem.replace('%cssClass%', 'quiz__item_answered').replace('%title%', answer)
        }
      }
    }

    const questionHTML = `
    <div class="result-question-list__item">
      <div class="quiz__question-wrapper">
        <h4 class="quiz__title quiz__title_question main-title">${index + 1}) ${question['question']}</h4>
        <div class="quiz__question">
          <div class="quiz__image">
            <img src="img/questions/${question['numberImg']}.jpg" alt="${question['question']}">
          </div>
          <ul class="quiz__list">${questionListAnswersHTML}</ul>
        </div>
      </div>
    </div>
    `
    resultScreenListAnswers.insertAdjacentHTML('beforeend', questionHTML)
  })
}
