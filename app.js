'use strict'
import {questions} from './questions.js'
// –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
const quizStartScreen = document.querySelector('.quiz__screen-start')
const quizButtonStart = document.querySelector('.quiz__button_start')

// –ö–≤–∏–∑ –∏ –≤–æ–ø—Ä–æ—Å—ã
const quizQuestionContainer = document.querySelector('.quiz__question-container')
const quizQuestionTitle = document.querySelector('.quiz__title_question')
const quizQuestionImageContainer = document.querySelector('.quiz__image')
const quizQuestionListAnswers = document.querySelector('.quiz__list')
const quizButtonQuestion = document.querySelector('.quiz__button_question')
const quizQuestionWrapper = document.querySelector('.quiz__question-wrapper')
const quizQuestionButtonWrapper = document.querySelector('.quiz__button-wrapper_question')

// –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
const quizProgressWrap = document.querySelector('.quiz__progress-wrap')
const quizProgressFill = document.querySelector('.quiz__progress-fill')
const quizProgressCurrentNumber = document.querySelector('.quiz__progress-question_current')
const quizProgressAmountNumber = document.querySelector('.quiz__progress-question_amount')

const quizTimeLeft = document.querySelector('.quiz__time-left')

// –≠–∫—Ä–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
const quizResultScreen = document.querySelector('.quiz__result-screen')
const quizResultScreenWrapper = document.querySelector('.result-screen_wrapper')
const quizButtonRestart = document.querySelector('.quiz__button_restart')
const resultScreenTitle = document.querySelector('.result-screen__title')
const resultScreenDescr = document.querySelector('.result-screen__descr')
const resultScreenTable = document.querySelector('.quiz__table-result')
const resultScreenListAnswers = document.querySelector('.quiz__result-question-list')

const audio = document.getElementsByTagName('audio')[0]

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
let questionIndex = 0
let userScore = 0
let countQuestions = questions.length

// –¢–∞–π–º–µ—Ä
const amountTimeSeconds = 30
const totalTime = amountTimeSeconds * countQuestions
let userPassingTime = 0
let countTimeSeconds = amountTimeSeconds
let countdown

const timerDisplay = () => {
  quizTimeLeft.innerHTML = `${countTimeSeconds}—Å`
  countdown = setInterval(() => {
    countTimeSeconds--
    quizTimeLeft.innerHTML = `${countTimeSeconds}—Å`
    if (countTimeSeconds == 3) {
      audio.play()
    }
    if (countTimeSeconds == 0) {
      userPassingTime += amountTimeSeconds - parseInt(quizTimeLeft.textContent)
      questionIndex++
      renderQuestion()
    }
  }, 1000)
}

// C–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ (–Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã, —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –ø–æ–≤—Ç–æ—Ä –∏–≥—Ä—ã)
quizButtonStart.addEventListener('click', function(e) {
  e.preventDefault()
  quizStartScreen.classList.remove('visible')
  quizQuestionContainer.classList.add('visible')
  randomQuestions()
  renderQuestion()
  animateScrollTo()
})
quizButtonQuestion.addEventListener('click', function(e) {
  e.preventDefault()
  if (checkAnswer()) {
    userPassingTime += amountTimeSeconds - parseInt(quizTimeLeft.textContent)
    renderQuestion()

    // –í—ã–∫–ª—é—á–µ–Ω–∏—é –∑–≤—É–∫–∞
    audio.pause()
    audio.currentTime = 0
    animateScrollTo()
  }
})
quizButtonRestart.addEventListener('click', function(e) {
  e.preventDefault()
  resetQuizResults()
  randomQuestions()
  renderQuestion()
  quizResultScreen.classList.remove('visible')
  quizQuestionContainer.classList.add('visible')
  quizStartScreen.classList.remove('visible')
  animateScrollTo()
})

function resetQuizResults() {
  questionIndex = 0
  userScore = 0
  userPassingTime = 0

  resultScreenTitle.innerHTML = ''
  resultScreenDescr.innerHTML = ''
  resultScreenTable.innerHTML = ''
  resultScreenListAnswers.innerHTML = ''

  for (let question of questions) {
    question['isRightUserAnswer'] = false
    question['userAnswer'] = null
  }
}

function checkAnswer() {
  const selectedAnswerUser = quizQuestionListAnswers.querySelector('.quiz__item-answer:checked')
  if (!selectedAnswerUser) {
    quizQuestionButtonWrapper.classList.add('error')
    setTimeout(() => {
      quizQuestionButtonWrapper.classList.remove('error')
    }, 2000)
    return false
  }
  quizQuestionButtonWrapper.classList.remove('error')
  questions[questionIndex]['userAnswer'] = selectedAnswerUser.value
  if (questions[questionIndex]['correct'] === questions[questionIndex]['userAnswer']) {
    questions[questionIndex]['isRightUserAnswer'] = true
    userScore++
  }

  questionIndex++

  return true
}

function renderQuestion() {
  // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≤–æ–ø—Ä–æ—Å–µ
  if (questionIndex === questions.length) {
    renderProgressBar(true)
    setTimeout(() => {
      quizQuestionContainer.classList.remove('visible')
      quizResultScreen.classList.add('visible')
      renderResult()
    }, 300)
    return
  }

  let questionTitleText = questions[questionIndex]['question']
  let questionImgHTML = `<img src="img/questions/${questions[questionIndex]['numberImg']}.jpg" alt="${questionTitleText}">`

  let questionListAnswersHTML = ``
  questions[questionIndex]['answers'].forEach((item, i) => {
    questionListAnswersHTML += `
        <li class="quiz__item">
          <input type="radio" name="answer" class="quiz__item-answer" id="quiz__item-answer_${i + 1}" value="${item}">
          <label for="quiz__item-answer_${i + 1}">
            <span>${item}</span>
          </label>
        </li>`
  })

  quizQuestionTitle.textContent = questionTitleText
  quizQuestionImageContainer.innerHTML = questionImgHTML
  quizQuestionListAnswers.innerHTML = questionListAnswersHTML

  if (questionIndex === questions.length - 1) {
    quizButtonQuestion.textContent = '–∑–∞–∫–æ–Ω—á–∏—Ç—å'
  } else {
    quizButtonQuestion.textContent = '–æ—Ç–≤–µ—Ç–∏—Ç—å'
  }

  renderProgressBar()

  countTimeSeconds = amountTimeSeconds
  clearInterval(countdown)
  timerDisplay()
}

function renderProgressBar(isLastQuestion = false) {
  if (!isLastQuestion) {
    quizProgressAmountNumber.textContent = countQuestions
    quizProgressCurrentNumber.textContent = questionIndex + 1
    quizProgressFill.style.width = `${questionIndex / countQuestions * 100}%`
  } else {
    quizProgressFill.style.width = `${questionIndex / countQuestions * 100}%`
  }
}

function randomQuestions() {
  questions.sort(() => Math.random() - 0.5)
  for (const q of questions) {
    q.answers.sort(() => Math.random() - 0.5)
  }
}

function renderResult() {
  clearInterval(countdown)
  audio.pause()
  audio.currentTime = 0

  const percentRightAnswers = (userScore / countQuestions * 100).toFixed()

  let raiting = 0
  if (percentRightAnswers > 85) {
    resultScreenDescr.innerHTML = `<span>–ì–µ–Ω–∏–π!</span>–¢—ã –ª–∏–±–æ –ë–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Å –Ω–∞—á–∞–ª–∞ –º–∏—Ä–∞ –Ω–∞–±–ª—é–¥–∞–ª –∑–∞ –≤—Å–µ–π –µ–≥–æ –∏—Å—Ç–æ—Ä–∏–µ–π, –ª–∏–±–æ –≤—Å–µ–∑–Ω–∞—é—â–∏–π –≥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–∏—Å–ø–æ–ª–Ω–∏–ª—Å—è –≤ —Å–≤–æ—ë–º –ø–æ–∑–Ω–∞–Ω–∏–∏. –ú–æ–ª–æ–¥–µ—Ü!`
    resultScreenTitle.innerHTML = `üéâ${userScore} <span>–∏–∑</span> ${countQuestions}üéâ`
    raiting = 5
  } else if (percentRightAnswers > 65) {
    resultScreenDescr.innerHTML = `<span>–û—Ç–ª–∏—á–Ω–æ!</span>–¢—ã –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à –≤ –∑–Ω–∞–Ω–∏—è—Ö –≤—Å–µ–æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏, –Ω–æ –¥–æ –≥–µ–Ω–∏—è –Ω–µ –¥–æ—Ç—è–Ω—É–ª`
    resultScreenTitle.innerHTML = `üéä${userScore} <span>–∏–∑</span> ${countQuestions}üéä`
    raiting = 4
  } else if (percentRightAnswers > 45) {
    resultScreenDescr.innerHTML = `<span>–õ—É—á—à–µ —á–µ–º –Ω–∏—á–µ–≥–æ!</span>–¢—ã –∑–Ω–∞–µ—à—å —á—Ç–æ-—Ç–æ, –Ω–æ –Ω–µ –±–æ–ª–µ–µ`
    resultScreenTitle.innerHTML = `ü•≥${userScore} <span>–∏–∑</span> ${countQuestions}ü•≥`
    raiting = 3
  } else if (percentRightAnswers > 1) {
    resultScreenDescr.innerHTML = `<span>–£–∂–∞—Å–Ω–æ!</span>–¢—ã –¥–∞–ª—ë–∫ –æ—Ç –≤—Å–µ–æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏`
    resultScreenTitle.innerHTML = `üò≠${userScore} <span>–∏–∑</span> ${countQuestions}üò≠`
    raiting = 2
  } else {
    resultScreenDescr.innerHTML = `<span>–ö–∞–∫ —Ç–∞–∫?</span>–ù–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞`
    resultScreenTitle.innerHTML = `ü§¨ü§Ø${userScore} <span>–∏–∑</span> ${countQuestions}ü§Øü§¨`
    raiting = 1
  }

  function secondsToMinutes(seconds) {
    seconds = Number(seconds)

    let m = Math.floor(seconds % 3600 / 60)
    let s = Math.floor(seconds % 3600 % 60)

    return ('0' + m).slice(-2) + ':' + ('0' + s).slice(-2)
  }

  resultScreenTable.innerHTML = `
    <tr>
      <th>–ö–æ–ª–∏—á–µ—Å—Ç–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</th>
      <th>${userScore} –∏–∑ ${countQuestions}</th>
    </tr>
    <tr>
      <td>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</td>
      <td>${percentRightAnswers}%</td>
    </tr>
    <tr>
      <td>–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è</td>
      <td>${secondsToMinutes(userPassingTime)} –∏–∑ ${secondsToMinutes(totalTime)}</td>
    </tr>
    <tr>
      <td>–û—Ü–µ–Ω–∫–∞</td>
      <td>${raiting}</td>
    </tr>
  `

  resultScreenListAnswers.innerHTML = `<div class="result-question-list__title">–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã</div>`
  questions.forEach((question, index) => {
    let questionListAnswersHTML = ''

    let templateAnswerItem = `
        <li class="quiz__item %cssClass%">
          <label>
            <span>%title%</span>
          </label>
          %description%
        </li>
      `
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞–º –Ω—É–∂–Ω—ã–µ —Å—Ç–∏–ª–∏
    if (question['isRightUserAnswer']) {
      for (let answer of question['answers']) {
        if (answer !== question['correct']) {
          questionListAnswersHTML += templateAnswerItem
            .replace('%cssClass%', 'quiz__item_answered')
            .replace('%title%', answer)
            .replace('%description%', '')
        } else {
          questionListAnswersHTML += templateAnswerItem
            .replace('%cssClass%', 'quiz__item_right')
            .replace('%title%', answer)
            .replace('%description%', `<div class="result-question-list__answer-descr">${question['descrAnswer']}</div>`)
        }
      }
    } else {
      for (let answer of question['answers']) {
        if (answer === question['correct']) {
          questionListAnswersHTML += templateAnswerItem
            .replace('%cssClass%', 'quiz__item_suppose')
            .replace('%title%', answer)
            .replace('%description%', `<div class="result-question-list__answer-descr">${question['descrAnswer']}</div>`)
        } else if (answer === question['userAnswer']) {
          questionListAnswersHTML += templateAnswerItem
            .replace('%cssClass%', 'quiz__item_wrong')
            .replace('%title%', answer)
            .replace('%description%', '')
        } else {
          questionListAnswersHTML += templateAnswerItem
            .replace('%cssClass%', 'quiz__item_answered')
            .replace('%title%', answer)
            .replace('%description%', '')
        }
      }
    }

    const questionHTML = `
    <div class="result-question-list__item">
      <div class="quiz__question-wrapper">
        <h4 class="quiz__title quiz__title_question main-title">${index + 1}) ${question['question']}</h4>
        <div class="quiz__question">
          <div class="quiz__image">
            <img src="img/questions/${question['numberImg']}.jpg" alt="${question['question']}">
          </div>
          <ul class="quiz__list">${questionListAnswersHTML}</ul>
        </div>
      </div>
    </div>
    `
    resultScreenListAnswers.insertAdjacentHTML('beforeend', questionHTML)
  })
}

function getHeaderHeight() {
  return document.querySelector('.header').scrollHeight
}
function animateScrollTo() {
  window.scrollTo({
    top: getHeaderHeight(),
    left: 0,
    behavior: 'smooth'
  })
}